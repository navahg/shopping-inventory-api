# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

# Build and push the docker
- task: Docker@2
  displayName: Login to the Dockerhub
  inputs:
    containerRegistry: 'docker-hub-conn'
    command: 'login'
- task: Docker@2
  displayName: Build and push the app to Dockerhub
  inputs:
    containerRegistry: 'docker-hub-conn'
    repository: 'raghavan16/shopping-api'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'

# Apply the changes
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'k8s-conn'
    command: 'apply'
    arguments: '-f $(Build.SourcesDirectory)/kube-deploy.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'k8s-conn'
    command: 'apply'
    arguments: '-f $(Build.SourcesDirectory)/kube-service.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

# Deploy on kubernetes
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'k8s-conn'
    command: 'set'
    arguments: 'image deployment/shopping-api shopping-api=raghavan16/shopping-api:$(Build.BuildId)'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
